plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
    id 'com.google.gms.google-services'
}

dependencies {
  // Import the Firebase BoM - 더 안정적인 버전 사용
  implementation platform('com.google.firebase:firebase-bom:32.8.1')


  // TODO: Add the dependencies for Firebase products you want to use
  // When using the BoM, don't specify versions in Firebase dependencies
  implementation 'com.google.firebase:firebase-analytics'
  

  // Add desugar tools dependency
  coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.1.4'

  // AndroidX Activity for enableEdgeToEdge support
  implementation 'androidx.activity:activity:1.9.3'
  implementation 'androidx.core:core:1.15.0'

  implementation 'com.google.android.gms:play-services-ads:23.0.0'
  // AdMob Mediation adapter for Meta Audience Network
  implementation 'com.google.ads.mediation:facebook:6.16.0.0'
  
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode")
if (flutterVersionCode == null) {
    flutterVersionCode = "1"
}

def flutterVersionName = localProperties.getProperty("flutter.versionName")
if (flutterVersionName == null) {
    flutterVersionName = "1.0"
}

android {
    namespace = "com.brainhealth.memorygame"
    compileSdk = 36  // Updated to support plugins requiring SDK 36
    ndkVersion = "27.0.12077973"  // 16KB 페이지 크기를 지원하는 NDK 버전

    compileOptions {
        // Enable desugaring
        coreLibraryDesugaringEnabled true
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId = "com.brainhealth.memorygame"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdkVersion = flutter.minSdkVersion
        targetSdk = 36  // Updated to match compileSdk for consistency
        // 16KB 페이지 크기 지원 설정
        ndk {
            // 16KB 페이지 크기를 지원하는 아키텍처만 포함
            abiFilters 'arm64-v8a'  // 16KB 페이지 크기는 주로 arm64에서 사용
        }
        versionCode = flutterVersionCode.toInteger()
        versionName = flutterVersionName
        renderscriptTargetApi 21
        renderscriptSupportModeEnabled true
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            ndk {
                // 16KB 페이지 크기 지원을 위해 arm64-v8a만 사용
                abiFilters 'arm64-v8a'
            }
        }
        debug {
            // 디버그 빌드 최적화 설정
            debuggable true
            minifyEnabled false
            shrinkResources false
            
            ndk {
                // 디버그/에뮬레이터에서는 성능을 위해 더 많은 아키텍처 포함
                abiFilters 'arm64-v8a', 'x86_64', 'armeabi-v7a'
            }
        }
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }
}

flutter {
    source = "../.."
}
